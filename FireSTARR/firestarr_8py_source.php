<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>FireSTARR: FireSTARR/firestarr.py Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">FireSTARR
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.php');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_4d88195d9c9596897c1a7e6e6c1a3b9e.php">FireSTARR</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">firestarr.py</div>  </div>
</div><!--header-->
<div class="contents">
<a href="firestarr_8py.php">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno"><a class="line" href="namespacefirestarr.php">    1</a></span>&#160;<span class="keyword">import</span> sys</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;sys.path.append(<span class="stringliteral">&#39;../util&#39;</span>)</div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="keyword">import</span> common</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="keyword">import</span> json</div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="keyword">import</span> logging</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="keyword">import</span> sys</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="keyword">import</span> pandas <span class="keyword">as</span> pd</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="keyword">import</span> math</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="keyword">import</span> datetime</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="keyword">import</span> shlex</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">import</span> timeit</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="keyword">from</span> osgeo <span class="keyword">import</span> ogr</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">from</span> osgeo <span class="keyword">import</span> osr</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keyword">import</span> statistics</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">import</span> fiona</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="keyword">from</span> shapely.geometry <span class="keyword">import</span> Polygon, mapping</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">import</span> os</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">import</span> firestarr_gis</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">import</span> numpy <span class="keyword">as</span> np</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160; </div>
<div class="line"><a name="l00021"></a><span class="lineno"><a class="line" href="namespacefirestarr.php#a06aef7ef6f48adc324935b219baa4ffd">   21</a></span>&#160;DATA_DIR = common.ensure_dir(<span class="stringliteral">&#39;/FireGUARD/data&#39;</span>)</div>
<div class="line"><a name="l00022"></a><span class="lineno"><a class="line" href="namespacefirestarr.php#aa849dc711b508dbe492ebca27b9d180c">   22</a></span>&#160;ROOT_DIR = common.ensure_dir(os.path.join(DATA_DIR, <span class="stringliteral">&#39;sims&#39;</span>))</div>
<div class="line"><a name="l00023"></a><span class="lineno"><a class="line" href="namespacefirestarr.php#a5b48af6a3c8f6d611ad8916790bc6f9e">   23</a></span>&#160;OUTPUT_DIR = common.ensure_dir(os.path.join(DATA_DIR, <span class="stringliteral">&#39;output&#39;</span>))</div>
<div class="line"><a name="l00024"></a><span class="lineno"><a class="line" href="namespacefirestarr.php#ab33d6c506fda6033a23f785361f98fc3">   24</a></span>&#160;PERIM_DIR = common.ensure_dir(os.path.join(OUTPUT_DIR, <span class="stringliteral">&#39;perimeter&#39;</span>))</div>
<div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="namespacefirestarr.php#a9908cd85de0fb59e4ed986f92fb85965">   25</a></span>&#160;PROB_DIR = common.ensure_dir(os.path.join(OUTPUT_DIR, <span class="stringliteral">&#39;probability&#39;</span>))</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno"><a class="line" href="namespacefirestarr.php#a0efb0beffb72d0bc39e536b008aeec00">   27</a></span>&#160;<span class="keyword">def </span><a class="code" href="namespacefirestarr.php#a0efb0beffb72d0bc39e536b008aeec00">unnest_values</a>(dict):</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    <span class="keywordflow">for</span> i <span class="keywordflow">in</span> dict:</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;        dict[i] = dict[i][<span class="stringliteral">&#39;value&#39;</span>]</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    <span class="keywordflow">return</span> dict</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160; </div>
<div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="namespacefirestarr.php#a5cbb738c875feb8b86cedaaac5d15997">   32</a></span>&#160;<span class="keyword">def </span><a class="code" href="namespacefirestarr.php#a5cbb738c875feb8b86cedaaac5d15997">try_read_first</a>(dict, key, fail_msg=None, is_fatal=False):</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    result = dict[key]</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    n = len(result)</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <span class="keywordflow">if</span> n &lt; 1:</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        msg = <span class="stringliteral">&quot;No {} provided&quot;</span>.format(key)</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        <span class="keywordflow">if</span> fail_msg <span class="keywordflow">is</span> <span class="keywordflow">not</span> <span class="keywordtype">None</span>:</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;            msg = <span class="stringliteral">&quot;{} - {}&quot;</span>.format(msg, fail_msg)</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        <span class="keywordflow">if</span> is_fatal:</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;            logging.fatal(msg)</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;            sys.exit(-1)</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        logging.warning(msg)</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        <span class="keywordflow">return</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        <span class="keywordflow">if</span> len(result) &gt; 1:</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;            logging.warning(<span class="stringliteral">&quot;{} {} provided - only the first one will be used&quot;</span>.format(n, key))</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="keywordflow">return</span> result[0]</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160; </div>
<div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="namespacefirestarr.php#ab05e9efc98d66338840327d32b403d69">   49</a></span>&#160;<span class="keyword">def </span><a class="code" href="namespacefirestarr.php#ab05e9efc98d66338840327d32b403d69">do_run</a>(fgmj):</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    startup = {</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                <span class="stringliteral">&#39;ffmc&#39;</span>:          {<span class="stringliteral">&#39;value&#39;</span>: 85.0},</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                <span class="stringliteral">&#39;dmc&#39;</span>:           {<span class="stringliteral">&#39;value&#39;</span>: 6.0},</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                <span class="stringliteral">&#39;dc&#39;</span>:            {<span class="stringliteral">&#39;value&#39;</span>: 15.0},</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                <span class="stringliteral">&#39;precipitation&#39;</span>: {<span class="stringliteral">&#39;value&#39;</span>: 0.0},</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;              }</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    region = os.path.basename(os.path.dirname(os.path.dirname(fgmj)))</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    job_name = os.path.basename(os.path.dirname(fgmj))</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    job_time = job_name[job_name.rindex(<span class="stringliteral">&#39;_&#39;</span>) + 1:-4]</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    job_date = job_time[:8]</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    fire_name = job_name[:job_name.index(<span class="stringliteral">&#39;_&#39;</span>)]</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    out_dir = os.path.join(ROOT_DIR, job_date, region, fire_name, job_time)</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    done_already = os.path.exists(out_dir)</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> done_already:</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        common.ensure_dir(out_dir)</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        <span class="keyword">with</span> open(fgmj) <span class="keyword">as</span> f:</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;          data = json.load(f)</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        MSG_DEFAULT_STARTUP = <span class="stringliteral">&#39;using default startup indices&#39;</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        project = data[<span class="stringliteral">&#39;project&#39;</span>]</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        stn = <a class="code" href="namespacefirestarr.php#a5cbb738c875feb8b86cedaaac5d15997">try_read_first</a>(project[<span class="stringliteral">&#39;stations&#39;</span>], <span class="stringliteral">&#39;stations&#39;</span>, MSG_DEFAULT_STARTUP)</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        <span class="keywordflow">if</span> stn <span class="keywordflow">is</span> <span class="keywordflow">not</span> <span class="keywordtype">None</span>:</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            stream = <a class="code" href="namespacefirestarr.php#a5cbb738c875feb8b86cedaaac5d15997">try_read_first</a>(stn[<span class="stringliteral">&#39;station&#39;</span>], <span class="stringliteral">&#39;streams&#39;</span>, MSG_DEFAULT_STARTUP)</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            <span class="keywordflow">if</span> stream <span class="keywordflow">is</span> <span class="keywordflow">not</span> <span class="keywordtype">None</span>:</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                startup = stream[<span class="stringliteral">&#39;condition&#39;</span>][<span class="stringliteral">&#39;startingCodes&#39;</span>]</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <a class="code" href="namespacefirestarr.php#a0efb0beffb72d0bc39e536b008aeec00">unnest_values</a>(startup)</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        logging.info(<span class="stringliteral">&quot;Startup indices are: {}&quot;</span>.format(startup))</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        ffmc = startup[<span class="stringliteral">&#39;ffmc&#39;</span>]</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        dmc = startup[<span class="stringliteral">&#39;dmc&#39;</span>]</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        dc = startup[<span class="stringliteral">&#39;dc&#39;</span>]</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        apcp_0800 = float(startup[<span class="stringliteral">&#39;precipitation&#39;</span>])</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="keywordflow">if</span> np.isnan(apcp_0800):</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;            apcp_0800 = 0</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        pt = <span class="keywordtype">None</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        ignition = <a class="code" href="namespacefirestarr.php#a5cbb738c875feb8b86cedaaac5d15997">try_read_first</a>(project[<span class="stringliteral">&#39;ignitions&#39;</span>], <span class="stringliteral">&#39;ignitions&#39;</span>, is_fatal=<span class="keyword">True</span>)</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        ign = <a class="code" href="namespacefirestarr.php#a5cbb738c875feb8b86cedaaac5d15997">try_read_first</a>(ignition[<span class="stringliteral">&#39;ignition&#39;</span>][<span class="stringliteral">&#39;ignitions&#39;</span>], <span class="stringliteral">&#39;ignitions&#39;</span>, is_fatal=<span class="keyword">True</span>)</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        perim = <span class="keywordtype">None</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        poly = ign[<span class="stringliteral">&#39;polygon&#39;</span>]</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        <span class="keywordflow">if</span> poly[<span class="stringliteral">&#39;units&#39;</span>] != <span class="stringliteral">&#39;LAT_LON&#39;</span>:</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;            logging.fatal(<span class="stringliteral">&quot;Only lat/long coordinates are currently supported&quot;</span>)</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            sys.exit(-1)</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <span class="keywordflow">if</span> ign[<span class="stringliteral">&#39;polyType&#39;</span>] != <span class="stringliteral">&#39;POINT&#39;</span>:</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            <span class="keywordflow">if</span> ign[<span class="stringliteral">&#39;polyType&#39;</span>] == <span class="stringliteral">&#39;POLYGON_OUT&#39;</span>:</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                pts = poly[<span class="stringliteral">&#39;polygon&#39;</span>][<span class="stringliteral">&#39;points&#39;</span>]</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                pts = list(map(unnest_values, pts))</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                pts = [list(map(<span class="keyword">lambda</span> v: [v[<span class="stringliteral">&#39;x&#39;</span>], v[<span class="stringliteral">&#39;y&#39;</span>]], pts))]</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                lat = statistics.mean(list(map(<span class="keyword">lambda</span> v: v[1], pts[0])))</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                long = statistics.mean(list(map(<span class="keyword">lambda</span> v: v[0], pts[0])))</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                <span class="comment"># print(long)</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                orig_zone = 15</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                orig_long = -93</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                diff = long - orig_long</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                <span class="comment"># print(diff)</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                ZONE_SIZE = 6</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                zone_diff = round(diff / ZONE_SIZE)</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                <span class="comment"># print(zone_diff)</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                meridian = orig_long + (zone_diff * ZONE_SIZE)</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                <span class="comment"># print(meridian)</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                zone = orig_zone + zone_diff</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                <span class="comment"># print(pts)</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                p = <span class="stringliteral">&#39;&#39;&#39;{&quot;type&quot;: &quot;Polygon&quot;,</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="stringliteral">                        &quot;coordinates&quot;: &#39;&#39;&#39;</span> + str(pts) + <span class="stringliteral">&#39;&#39;&#39;,</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="stringliteral">                    }&#39;&#39;&#39;</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                <span class="comment"># print(p)</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                g = ogr.CreateGeometryFromJson(p)</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                <span class="comment"># print(g)</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                <span class="comment"># print(&quot;Hi! I&#39;m a %s with an Area  %s&quot; % (g.GetGeometryName(), g.Area()))</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                <span class="comment"># print(&quot;I have inside me %s feature(s)!\n&quot; % g.GetGeometryCount())</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                <span class="comment"># for idx, f in enumerate(g):</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                    <span class="comment"># print(&quot;I&#39;m feature n.%s and I am a %s.\t I have an Area of %s - You can get my json repr with f.ExportToJson()&quot; % (idx, f.GetGeometryName(),f.Area()))</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                source = osr.SpatialReference()</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                source.ImportFromEPSG(4269)</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                target = osr.SpatialReference()</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                target.ImportFromEPSG(3159)</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                z = target.ExportToWkt()</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                z = z[:z.rindex(<span class="stringliteral">&quot;,AUTHORITY&quot;</span>)] + <span class="stringliteral">&quot;]&quot;</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                z = z.replace(<span class="stringliteral">&#39;UTM zone 15N&#39;</span>, <span class="stringliteral">&#39;UTM zone {}N&#39;</span>)</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                z = z.replace(<span class="stringliteral">&#39;&quot;central_meridian&quot;,-93&#39;</span>, <span class="stringliteral">&#39;&quot;central_meridian&quot;,{}&#39;</span>)</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                z = z.format(zone, meridian)</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                <span class="comment"># print(z)</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                <span class="comment"># print(target)</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                target.ImportFromWkt(z)</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                transform = osr.CoordinateTransformation(source, target)</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                g.Transform(transform)</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                <span class="comment">#print(g)</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                <span class="comment"># logging.debug(&quot;Hi! I&#39;m a %s with an Area  %s&quot; % (g.GetGeometryName(), g.Area()))</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                <span class="comment"># logging.debug(&quot;I have inside me %s feature(s)!\n&quot; % g.GetGeometryCount())</span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                <span class="comment"># for idx, f in enumerate(g):</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                    <span class="comment"># logging.debug(&quot;I&#39;m feature n.%s and I am a %s.\t I have an Area of %s - You can get my json repr with f.ExportToJson()&quot; % (idx, f.GetGeometryName(),f.Area()))</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                out_name = <span class="stringliteral">&#39;{}.shp&#39;</span>.format(fire_name)</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                out_file = os.path.join(out_dir, out_name)</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                driver = ogr.GetDriverByName(<span class="stringliteral">&quot;Esri Shapefile&quot;</span>)</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                ds = driver.CreateDataSource(out_file)</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                layr1 = ds.CreateLayer(<span class="stringliteral">&#39;&#39;</span>, <span class="keywordtype">None</span>, ogr.wkbPolygon)</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                <span class="comment"># create the field</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                layr1.CreateField(ogr.FieldDefn(<span class="stringliteral">&#39;id&#39;</span>, ogr.OFTInteger))</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                <span class="comment"># Create the feature and set values</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                defn = layr1.GetLayerDefn()</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                feat = ogr.Feature(defn)</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                feat.SetField(<span class="stringliteral">&#39;id&#39;</span>, 1)</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                feat.SetGeometry(g)</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                layr1.CreateFeature(feat)</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                <span class="comment"># close the shapefile</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                ds.Destroy()</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                target.MorphToESRI()</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                <span class="keyword">with</span> open(os.path.join(out_dir, <span class="stringliteral">&#39;{}.prj&#39;</span>.format(fire_name)), <span class="stringliteral">&#39;w&#39;</span>) <span class="keyword">as</span> file:</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                    file.write(target.ExportToWkt())</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                YEAR = 2021</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                perim = <a class="code" href="namespacefirestarr__gis.php#a3830fbe88c36fa64b1bed8fcee80ad73">firestarr_gis.rasterize_perim</a>(out_dir, out_file, YEAR, fire_name)[1]</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;            <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                logging.fatal(<span class="stringliteral">&quot;Unsupported ignition type {}&quot;</span>.format(ign[<span class="stringliteral">&#39;polyType&#39;</span>]))</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            <span class="keywordflow">if</span> perim <span class="keywordflow">is</span> <span class="keywordtype">None</span>:</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                sys.exit(-1)</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            pt = <a class="code" href="namespacefirestarr.php#a5cbb738c875feb8b86cedaaac5d15997">try_read_first</a>(poly[<span class="stringliteral">&#39;polygon&#39;</span>], <span class="stringliteral">&#39;points&#39;</span>, is_fatal=<span class="keyword">True</span>)</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;            <span class="keywordflow">if</span> pt <span class="keywordflow">is</span> <span class="keywordtype">None</span>:</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                <span class="comment"># should have already exited but check</span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                logging.fatal(<span class="stringliteral">&quot;Ignition point not initialized&quot;</span>)</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                sys.exit(-1)</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;            <a class="code" href="namespacefirestarr.php#a0efb0beffb72d0bc39e536b008aeec00">unnest_values</a>(pt)</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;            lat = pt[<span class="stringliteral">&#39;y&#39;</span>]</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;            long = pt[<span class="stringliteral">&#39;x&#39;</span>]</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        logging.info(<span class="stringliteral">&quot;Startup coordinates are {}, {}&quot;</span>.format(lat, long))</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        scenario = <a class="code" href="namespacefirestarr.php#a5cbb738c875feb8b86cedaaac5d15997">try_read_first</a>(project[<span class="stringliteral">&#39;scenarios&#39;</span>], <span class="stringliteral">&#39;scenarios&#39;</span>, is_fatal=<span class="keyword">True</span>)[<span class="stringliteral">&#39;scenario&#39;</span>]</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        start_time = scenario[<span class="stringliteral">&#39;startTime&#39;</span>][<span class="stringliteral">&#39;time&#39;</span>]</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        start_time = pd.to_datetime(start_time)</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        logging.info(<span class="stringliteral">&quot;Scenario start time is: {}&quot;</span>.format(start_time))</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        hour = start_time.hour</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        minute = start_time.minute</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        tz = (start_time.tz._minutes) / 60.0</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        <span class="keywordflow">if</span> math.floor(tz) != tz:</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;            logging.fatal(<span class="stringliteral">&quot;Currently not set up to deal with partial hour timezones&quot;</span>)</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;            sys.exit(-1)</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        tz = int(tz)</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        logging.info(<span class="stringliteral">&quot;Timezone offset is {}&quot;</span>.format(tz))</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        date_offset = 0</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        start_date = datetime.date.today()</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        start_date = start_time.date()</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        <span class="keywordflow">if</span> start_date != datetime.date.today():</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;            date_offset = (start_date - datetime.date.today()).days</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;            logging.warning(<span class="stringliteral">&quot;Simulation does not start today - date offset set to {}&quot;</span>.format(date_offset))</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        url = <span class="stringliteral">r&quot;http://wxshield:80/wxshield/getWx.php?model=geps&amp;lat={}&amp;long={}&amp;dateOffset={}&amp;tz={}&amp;mode=daily&quot;</span>.format(lat, long, date_offset, tz)</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        logging.debug(url)</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        <span class="keywordflow">try</span>:</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;            csv = common.download(url).decode(<span class="stringliteral">&quot;utf-8&quot;</span>)</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        <span class="keywordflow">except</span>:</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;            logging.fatal(<span class="stringliteral">&quot;Unable to download weather&quot;</span>)</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;            sys.exit(-3)</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        data = [x.split(<span class="stringliteral">&#39;,&#39;</span>) <span class="keywordflow">for</span> x <span class="keywordflow">in</span> csv.splitlines()]</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        df = pd.DataFrame(data[1:], columns=data[0])</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        <span class="comment"># print(df)</span></div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        <span class="comment"># supposed to be really picky about inputs</span></div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        <span class="comment">#&quot;Scenario,Date,APCP,TMP,RH,WS,WD,FFMC,DMC,DC,ISI,BUI,FWI&quot;;</span></div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        df = df[[<span class="stringliteral">&#39;MEMBER&#39;</span>, <span class="stringliteral">&#39;DAILY&#39;</span>, <span class="stringliteral">&#39;PREC&#39;</span>, <span class="stringliteral">&#39;TEMP&#39;</span>, <span class="stringliteral">&#39;RH&#39;</span>, <span class="stringliteral">&#39;WS&#39;</span>, <span class="stringliteral">&#39;WD&#39;</span>]]</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        df.columns = [<span class="stringliteral">&#39;Scenario&#39;</span>, <span class="stringliteral">&#39;Date&#39;</span>, <span class="stringliteral">&#39;APCP&#39;</span>, <span class="stringliteral">&#39;TMP&#39;</span>, <span class="stringliteral">&#39;RH&#39;</span>, <span class="stringliteral">&#39;WS&#39;</span>, <span class="stringliteral">&#39;WD&#39;</span>]</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        <span class="comment"># for some reason scenario numbers are negative right now?</span></div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        df[<span class="stringliteral">&#39;Scenario&#39;</span>] = df[<span class="stringliteral">&#39;Scenario&#39;</span>].apply(<span class="keyword">lambda</span> x: -1 - int(x))</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        df[<span class="stringliteral">&#39;Date&#39;</span>] = df[<span class="stringliteral">&#39;Date&#39;</span>].apply(<span class="keyword">lambda</span> x: x + <span class="stringliteral">&quot; 13:00:00&quot;</span>)</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        <span class="keywordflow">for</span> col <span class="keywordflow">in</span> [<span class="stringliteral">&#39;FFMC&#39;</span>, <span class="stringliteral">&#39;DMC&#39;</span>, <span class="stringliteral">&#39;DC&#39;</span>, <span class="stringliteral">&#39;ISI&#39;</span>, <span class="stringliteral">&#39;BUI&#39;</span>, <span class="stringliteral">&#39;FWI&#39;</span>]:</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;            df[col] = 0</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        df.to_csv(<span class="stringliteral">&#39;wx.csv&#39;</span>, index=<span class="keyword">False</span>)</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        cmd = <span class="stringliteral">&quot;./FireSTARR&quot;</span></div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        args = <span class="stringliteral">&quot;{} {} {} {} {}:{:02d} -v --wx wx.csv --ffmc {} --dmc {} --dc {} --apcp_0800 {}&quot;</span>.format(out_dir, start_date, lat, long, hour, minute, ffmc, dmc, dc, apcp_0800)</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        <span class="keywordflow">if</span> perim <span class="keywordflow">is</span> <span class="keywordflow">not</span> <span class="keywordtype">None</span>:</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;            args = args + <span class="stringliteral">&quot; --perim {}&quot;</span>.format(perim)</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        <span class="comment"># run generated command for parsing data</span></div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        run_what = [cmd] + shlex.split(args.replace(<span class="stringliteral">&#39;\\&#39;</span>, <span class="stringliteral">&#39;/&#39;</span>))</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        logging.info(<span class="stringliteral">&quot;Running: &quot;</span> + <span class="stringliteral">&#39; &#39;</span>.join(run_what))</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        t0 = timeit.default_timer()</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        stdout, stderr = common.finish_process(common.start_process(run_what, <span class="stringliteral">&quot;/FireGUARD/FireSTARR&quot;</span>))</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        t1 = timeit.default_timer()</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        logging.info(<span class="stringliteral">&quot;Took {}s to run simulations&quot;</span>.format(t1 - t0))</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        log_name = os.path.join(out_dir, <span class="stringliteral">&quot;log.txt&quot;</span>)</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        <span class="keyword">with</span> open(log_name, <span class="stringliteral">&#39;w&#39;</span>) <span class="keyword">as</span> log_file:</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;            log_file.write(stdout.decode(<span class="stringliteral">&#39;utf-8&#39;</span>))</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        outputs = sorted(os.listdir(out_dir))</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        extent = <span class="keywordtype">None</span></div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        probs = [x <span class="keywordflow">for</span> x <span class="keywordflow">in</span> outputs <span class="keywordflow">if</span> x.endswith(<span class="stringliteral">&#39;asc&#39;</span>) <span class="keywordflow">and</span> x.startswith(<span class="stringliteral">&#39;wxshield&#39;</span>)]</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        <span class="keywordflow">if</span> len(probs) &gt; 0:</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;            prob = probs[-1]</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;            extent = <a class="code" href="namespacefirestarr__gis.php#ae4268a1560b326fead2944b9b0f11013">firestarr_gis.project_raster</a>(os.path.join(out_dir, prob), os.path.join(PROB_DIR, job_date, region, fire_name + <span class="stringliteral">&#39;.tif&#39;</span>))</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        perims = [x <span class="keywordflow">for</span> x <span class="keywordflow">in</span> outputs <span class="keywordflow">if</span> x.endswith(<span class="stringliteral">&#39;tif&#39;</span>)]</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        <span class="keywordflow">if</span> len(perims) &gt; 0:</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;            perim = perims[0]</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;            <a class="code" href="namespacefirestarr__gis.php#ae4268a1560b326fead2944b9b0f11013">firestarr_gis.project_raster</a>(os.path.join(out_dir, perim),</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                                         os.path.join(PERIM_DIR, job_date, region, fire_name + <span class="stringliteral">&#39;.tif&#39;</span>),</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                                         outputBounds=extent)</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    <span class="keywordflow">else</span>:</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;        <span class="keywordflow">return</span> <span class="keywordtype">None</span></div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    <span class="keywordflow">return</span> log_name</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160; </div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160; </div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="keywordflow">if</span> __name__ == <span class="stringliteral">&quot;__main__&quot;</span>:</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    <a class="code" href="namespacefirestarr.php#ab05e9efc98d66338840327d32b403d69">do_run</a>(sys.argv[1])</div>
<div class="ttc" id="anamespacefirestarr__gis_php_a3830fbe88c36fa64b1bed8fcee80ad73"><div class="ttname"><a href="namespacefirestarr__gis.php#a3830fbe88c36fa64b1bed8fcee80ad73">firestarr_gis.rasterize_perim</a></div><div class="ttdeci">def rasterize_perim(run_output, perim, year, name, raster=None)</div><div class="ttdoc">Convert a perimeter to a raster.</div><div class="ttdef"><b>Definition:</b> <a href="firestarr__gis_8py_source.php#l00300">firestarr_gis.py:300</a></div></div>
<div class="ttc" id="anamespacefirestarr__gis_php_ae4268a1560b326fead2944b9b0f11013"><div class="ttname"><a href="namespacefirestarr__gis.php#ae4268a1560b326fead2944b9b0f11013">firestarr_gis.project_raster</a></div><div class="ttdeci">def project_raster(filename, output_raster=None, outputBounds=None, options=['COMPRESS=LZW', 'TILED=YES'])</div><div class="ttdef"><b>Definition:</b> <a href="firestarr__gis_8py_source.php#l00348">firestarr_gis.py:348</a></div></div>
<div class="ttc" id="anamespacefirestarr_php_a0efb0beffb72d0bc39e536b008aeec00"><div class="ttname"><a href="namespacefirestarr.php#a0efb0beffb72d0bc39e536b008aeec00">firestarr.unnest_values</a></div><div class="ttdeci">def unnest_values(dict)</div><div class="ttdef"><b>Definition:</b> <a href="firestarr_8py_source.php#l00027">firestarr.py:27</a></div></div>
<div class="ttc" id="anamespacefirestarr_php_a5cbb738c875feb8b86cedaaac5d15997"><div class="ttname"><a href="namespacefirestarr.php#a5cbb738c875feb8b86cedaaac5d15997">firestarr.try_read_first</a></div><div class="ttdeci">def try_read_first(dict, key, fail_msg=None, is_fatal=False)</div><div class="ttdef"><b>Definition:</b> <a href="firestarr_8py_source.php#l00032">firestarr.py:32</a></div></div>
<div class="ttc" id="anamespacefirestarr_php_ab05e9efc98d66338840327d32b403d69"><div class="ttname"><a href="namespacefirestarr.php#ab05e9efc98d66338840327d32b403d69">firestarr.do_run</a></div><div class="ttdeci">def do_run(fgmj)</div><div class="ttdef"><b>Definition:</b> <a href="firestarr_8py_source.php#l00049">firestarr.py:49</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>
</html>
