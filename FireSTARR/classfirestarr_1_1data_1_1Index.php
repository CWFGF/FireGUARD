<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>FireSTARR: firestarr::data::Index&lt; T &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">FireSTARR
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.php');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacefirestarr.php">firestarr</a></li><li class="navelem"><a class="el" href="namespacefirestarr_1_1data.php">data</a></li><li class="navelem"><a class="el" href="classfirestarr_1_1data_1_1Index.php">Index</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="classfirestarr_1_1data_1_1Index-members.php">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">firestarr::data::Index&lt; T &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>A wrapper around a double to ensure correct types are used.  
 <a href="classfirestarr_1_1data_1_1Index.php#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="Index_8h_source.php">Index.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for firestarr::data::Index&lt; T &gt;:</div>
<div class="dyncontent">
<div class="center"><img src="classfirestarr_1_1data_1_1Index__inherit__graph.png" border="0" usemap="#afirestarr_1_1data_1_1Index_3_01T_01_4_inherit__map" alt="Inheritance graph"/></div>
<map name="afirestarr_1_1data_1_1Index_3_01T_01_4_inherit__map" id="afirestarr_1_1data_1_1Index_3_01T_01_4_inherit__map">
<area shape="rect" title="A wrapper around a double to ensure correct types are used." alt="" coords="2015,5,2177,332"/>
<area shape="rect" href="classfirestarr_1_1wx_1_1AccumulatedPrecipitation.php" title="Accumulated precipitation in mm." alt="" coords="5,519,269,611"/>
<area shape="rect" href="classfirestarr_1_1wx_1_1Bui.php" title="Build&#45;up Index value." alt="" coords="293,512,405,619"/>
<area shape="rect" href="classfirestarr_1_1wx_1_1Dc.php" title="Drought Code value." alt="" coords="429,527,576,604"/>
<area shape="rect" href="classfirestarr_1_1wx_1_1Direction.php" title="Direction with access to degrees or radians." alt="" coords="600,453,744,677"/>
<area shape="rect" href="classfirestarr_1_1wx_1_1Dmc.php" title="Duff Moisture Code value." alt="" coords="768,519,888,611"/>
<area shape="rect" href="classfirestarr_1_1wx_1_1Dsr.php" title="Danger Severity Rating value." alt="" coords="913,519,1026,611"/>
<area shape="rect" href="classfirestarr_1_1wx_1_1Ffmc.php" title="Fine Fuel Moisture Code value." alt="" coords="1051,519,1173,611"/>
<area shape="rect" href="classfirestarr_1_1wx_1_1Fwi.php" title="Fire Weather Index value." alt="" coords="1197,512,1312,619"/>
<area shape="rect" href="classfirestarr_1_1wx_1_1Isi.php" title="Initial Spread Index value." alt="" coords="1336,512,1443,619"/>
<area shape="rect" href="classfirestarr_1_1wx_1_1RelativeHumidity.php" title="Relative humidity as a percentage." alt="" coords="1467,519,1658,611"/>
<area shape="rect" href="classfirestarr_1_1wx_1_1Speed.php" title="Speed in kilometers per hour." alt="" coords="1683,519,1813,611"/>
<area shape="rect" href="classfirestarr_1_1wx_1_1Temperature.php" title="Temperature in degrees Celsius." alt="" coords="1838,519,2005,611"/>
<area shape="rect" href="classfirestarr_1_1data_1_1Index.php" title=" " alt="" coords="2029,395,2163,736"/>
<area shape="rect" href="classfirestarr_1_1data_1_1Index.php" title=" " alt="" coords="2187,395,2320,736"/>
<area shape="rect" href="classfirestarr_1_1data_1_1Index.php" title=" " alt="" coords="2344,395,2477,736"/>
<area shape="rect" href="classfirestarr_1_1data_1_1Index.php" title=" " alt="" coords="2501,395,2635,736"/>
<area shape="rect" href="classfirestarr_1_1data_1_1Index.php" title=" " alt="" coords="2659,395,2792,736"/>
<area shape="rect" href="classfirestarr_1_1data_1_1Index.php" title=" " alt="" coords="2816,395,2949,736"/>
<area shape="rect" href="classfirestarr_1_1data_1_1Index.php" title=" " alt="" coords="2973,395,3107,736"/>
<area shape="rect" href="classfirestarr_1_1data_1_1Index.php" title=" " alt="" coords="3131,395,3264,736"/>
<area shape="rect" href="classfirestarr_1_1data_1_1Index.php" title=" " alt="" coords="3288,395,3421,736"/>
<area shape="rect" href="classfirestarr_1_1data_1_1Index.php" title=" " alt="" coords="3446,395,3589,736"/>
<area shape="rect" href="classfirestarr_1_1data_1_1Index.php" title=" " alt="" coords="3613,395,3805,736"/>
<area shape="rect" href="classfirestarr_1_1data_1_1Index.php" title=" " alt="" coords="3829,395,3963,736"/>
<area shape="rect" href="classfirestarr_1_1data_1_1Index.php" title=" " alt="" coords="3987,395,4120,736"/>
<area shape="rect" href="classfirestarr_1_1data_1_1LogValue.php" title="A result of calling log(x) for some value of x, pre&#45;calculated at compile time." alt="" coords="2489,785,2647,863"/>
</map>
</div>
<div class="dynheader">
Collaboration diagram for firestarr::data::Index&lt; T &gt;:</div>
<div class="dyncontent">
<div class="center"><img src="classfirestarr_1_1data_1_1Index__coll__graph.png" border="0" usemap="#afirestarr_1_1data_1_1Index_3_01T_01_4_coll__map" alt="Collaboration graph"/></div>
<map name="afirestarr_1_1data_1_1Index_3_01T_01_4_coll__map" id="afirestarr_1_1data_1_1Index_3_01T_01_4_coll__map">
<area shape="rect" title="A wrapper around a double to ensure correct types are used." alt="" coords="5,145,168,472"/>
<area shape="rect" title=" " alt="" coords="57,5,117,83"/>
</map>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:afeb43a857f2d399452e0bf4b029b9722"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfirestarr_1_1data_1_1Index.php#afeb43a857f2d399452e0bf4b029b9722">~Index</a> ()=default</td></tr>
<tr class="memdesc:afeb43a857f2d399452e0bf4b029b9722"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="classfirestarr_1_1data_1_1Index.php#afeb43a857f2d399452e0bf4b029b9722">More...</a><br /></td></tr>
<tr class="separator:afeb43a857f2d399452e0bf4b029b9722"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5119b473ce89bc2c41839937aa0d354c"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfirestarr_1_1data_1_1Index.php#a5119b473ce89bc2c41839937aa0d354c">Index</a> () noexcept</td></tr>
<tr class="memdesc:a5119b473ce89bc2c41839937aa0d354c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Construct with a value of 0.  <a href="classfirestarr_1_1data_1_1Index.php#a5119b473ce89bc2c41839937aa0d354c">More...</a><br /></td></tr>
<tr class="separator:a5119b473ce89bc2c41839937aa0d354c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc29199a1479ba091f9e254904d51593"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfirestarr_1_1data_1_1Index.php#adc29199a1479ba091f9e254904d51593">Index</a> (const double value) noexcept</td></tr>
<tr class="memdesc:adc29199a1479ba091f9e254904d51593"><td class="mdescLeft">&#160;</td><td class="mdescRight">Construct with given value.  <a href="classfirestarr_1_1data_1_1Index.php#adc29199a1479ba091f9e254904d51593">More...</a><br /></td></tr>
<tr class="separator:adc29199a1479ba091f9e254904d51593"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b387c890d1ebacda189cc382a067a29"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfirestarr_1_1data_1_1Index.php#a3b387c890d1ebacda189cc382a067a29">Index</a> (<a class="el" href="classfirestarr_1_1data_1_1Index.php">Index</a>&lt; T &gt; &amp;&amp;rhs) noexcept=default</td></tr>
<tr class="memdesc:a3b387c890d1ebacda189cc382a067a29"><td class="mdescLeft">&#160;</td><td class="mdescRight">Move constructor.  <a href="classfirestarr_1_1data_1_1Index.php#a3b387c890d1ebacda189cc382a067a29">More...</a><br /></td></tr>
<tr class="separator:a3b387c890d1ebacda189cc382a067a29"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4206ad6943c1054bc931d04b55b4d011"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfirestarr_1_1data_1_1Index.php#a4206ad6943c1054bc931d04b55b4d011">Index</a> (const <a class="el" href="classfirestarr_1_1data_1_1Index.php">Index</a>&lt; T &gt; &amp;rhs) noexcept=default</td></tr>
<tr class="memdesc:a4206ad6943c1054bc931d04b55b4d011"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy constructor.  <a href="classfirestarr_1_1data_1_1Index.php#a4206ad6943c1054bc931d04b55b4d011">More...</a><br /></td></tr>
<tr class="separator:a4206ad6943c1054bc931d04b55b4d011"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e9b375adfa0e988aba0bc12a0d1dbb2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classfirestarr_1_1data_1_1Index.php">Index</a>&lt; T &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfirestarr_1_1data_1_1Index.php#a2e9b375adfa0e988aba0bc12a0d1dbb2">operator=</a> (<a class="el" href="classfirestarr_1_1data_1_1Index.php">Index</a>&lt; T &gt; &amp;&amp;rhs) noexcept=default</td></tr>
<tr class="memdesc:a2e9b375adfa0e988aba0bc12a0d1dbb2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Move assignment.  <a href="classfirestarr_1_1data_1_1Index.php#a2e9b375adfa0e988aba0bc12a0d1dbb2">More...</a><br /></td></tr>
<tr class="separator:a2e9b375adfa0e988aba0bc12a0d1dbb2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18a991bffff923f3bf8ecf6042dcd2e4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classfirestarr_1_1data_1_1Index.php">Index</a>&lt; T &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfirestarr_1_1data_1_1Index.php#a18a991bffff923f3bf8ecf6042dcd2e4">operator=</a> (const <a class="el" href="classfirestarr_1_1data_1_1Index.php">Index</a>&lt; T &gt; &amp;rhs) noexcept=default</td></tr>
<tr class="memdesc:a18a991bffff923f3bf8ecf6042dcd2e4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy assignment.  <a href="classfirestarr_1_1data_1_1Index.php#a18a991bffff923f3bf8ecf6042dcd2e4">More...</a><br /></td></tr>
<tr class="separator:a18a991bffff923f3bf8ecf6042dcd2e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a355a1deb00a43102ca17a49fcc2afd59"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfirestarr_1_1data_1_1Index.php#a355a1deb00a43102ca17a49fcc2afd59">operator==</a> (const <a class="el" href="classfirestarr_1_1data_1_1Index.php">Index</a>&lt; T &gt; &amp;rhs) const noexcept</td></tr>
<tr class="memdesc:a355a1deb00a43102ca17a49fcc2afd59"><td class="mdescLeft">&#160;</td><td class="mdescRight">Equality operator.  <a href="classfirestarr_1_1data_1_1Index.php#a355a1deb00a43102ca17a49fcc2afd59">More...</a><br /></td></tr>
<tr class="separator:a355a1deb00a43102ca17a49fcc2afd59"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d2973a6d414267b15820bd6f221d186"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfirestarr_1_1data_1_1Index.php#a9d2973a6d414267b15820bd6f221d186">operator!=</a> (const <a class="el" href="classfirestarr_1_1data_1_1Index.php">Index</a>&lt; T &gt; &amp;rhs) const noexcept</td></tr>
<tr class="memdesc:a9d2973a6d414267b15820bd6f221d186"><td class="mdescLeft">&#160;</td><td class="mdescRight">Not equals operator.  <a href="classfirestarr_1_1data_1_1Index.php#a9d2973a6d414267b15820bd6f221d186">More...</a><br /></td></tr>
<tr class="separator:a9d2973a6d414267b15820bd6f221d186"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5df875f5afca6423b3cba29287a4911d"><td class="memItemLeft" align="right" valign="top">constexpr double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfirestarr_1_1data_1_1Index.php#a5df875f5afca6423b3cba29287a4911d">asDouble</a> () const noexcept</td></tr>
<tr class="memdesc:a5df875f5afca6423b3cba29287a4911d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns value as a double.  <a href="classfirestarr_1_1data_1_1Index.php#a5df875f5afca6423b3cba29287a4911d">More...</a><br /></td></tr>
<tr class="separator:a5df875f5afca6423b3cba29287a4911d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab5f801d345695bc05bfaf23de9bfecb"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfirestarr_1_1data_1_1Index.php#aab5f801d345695bc05bfaf23de9bfecb">operator&lt;</a> (const <a class="el" href="classfirestarr_1_1data_1_1Index.php">Index</a>&lt; T &gt; rhs) const noexcept</td></tr>
<tr class="memdesc:aab5f801d345695bc05bfaf23de9bfecb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Less than operator.  <a href="classfirestarr_1_1data_1_1Index.php#aab5f801d345695bc05bfaf23de9bfecb">More...</a><br /></td></tr>
<tr class="separator:aab5f801d345695bc05bfaf23de9bfecb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7174a9e268a24bb04612d2f5b62379a"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfirestarr_1_1data_1_1Index.php#ac7174a9e268a24bb04612d2f5b62379a">operator&gt;</a> (const <a class="el" href="classfirestarr_1_1data_1_1Index.php">Index</a>&lt; T &gt; rhs) const noexcept</td></tr>
<tr class="memdesc:ac7174a9e268a24bb04612d2f5b62379a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Greater than operator.  <a href="classfirestarr_1_1data_1_1Index.php#ac7174a9e268a24bb04612d2f5b62379a">More...</a><br /></td></tr>
<tr class="separator:ac7174a9e268a24bb04612d2f5b62379a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0416eae4a5a48a4f38ed2677c46dae62"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfirestarr_1_1data_1_1Index.php#a0416eae4a5a48a4f38ed2677c46dae62">operator&lt;=</a> (const <a class="el" href="classfirestarr_1_1data_1_1Index.php">Index</a>&lt; T &gt; rhs) const noexcept</td></tr>
<tr class="memdesc:a0416eae4a5a48a4f38ed2677c46dae62"><td class="mdescLeft">&#160;</td><td class="mdescRight">Less than or equal to operator.  <a href="classfirestarr_1_1data_1_1Index.php#a0416eae4a5a48a4f38ed2677c46dae62">More...</a><br /></td></tr>
<tr class="separator:a0416eae4a5a48a4f38ed2677c46dae62"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9b9d22420d89b8b489d7d3a665f79cf"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfirestarr_1_1data_1_1Index.php#af9b9d22420d89b8b489d7d3a665f79cf">operator&gt;=</a> (const <a class="el" href="classfirestarr_1_1data_1_1Index.php">Index</a>&lt; T &gt; rhs) const noexcept</td></tr>
<tr class="memdesc:af9b9d22420d89b8b489d7d3a665f79cf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Greater than or equal to operator.  <a href="classfirestarr_1_1data_1_1Index.php#af9b9d22420d89b8b489d7d3a665f79cf">More...</a><br /></td></tr>
<tr class="separator:af9b9d22420d89b8b489d7d3a665f79cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af3876eaec550c3d7ace605f975b7b59b"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="classfirestarr_1_1data_1_1Index.php">Index</a>&lt; T &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfirestarr_1_1data_1_1Index.php#af3876eaec550c3d7ace605f975b7b59b">operator+</a> (const <a class="el" href="classfirestarr_1_1data_1_1Index.php">Index</a>&lt; T &gt; rhs) const noexcept</td></tr>
<tr class="memdesc:af3876eaec550c3d7ace605f975b7b59b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Addition operator.  <a href="classfirestarr_1_1data_1_1Index.php#af3876eaec550c3d7ace605f975b7b59b">More...</a><br /></td></tr>
<tr class="separator:af3876eaec550c3d7ace605f975b7b59b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54806a488e87b0ab602efb2f0b25a96f"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="classfirestarr_1_1data_1_1Index.php">Index</a>&lt; T &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfirestarr_1_1data_1_1Index.php#a54806a488e87b0ab602efb2f0b25a96f">operator-</a> (const <a class="el" href="classfirestarr_1_1data_1_1Index.php">Index</a>&lt; T &gt; rhs) const noexcept</td></tr>
<tr class="memdesc:a54806a488e87b0ab602efb2f0b25a96f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtraction operator.  <a href="classfirestarr_1_1data_1_1Index.php#a54806a488e87b0ab602efb2f0b25a96f">More...</a><br /></td></tr>
<tr class="separator:a54806a488e87b0ab602efb2f0b25a96f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f75b03fea6c12241644ae95ffd58a50"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="classfirestarr_1_1data_1_1Index.php">Index</a>&lt; T &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfirestarr_1_1data_1_1Index.php#a8f75b03fea6c12241644ae95ffd58a50">operator+=</a> (const <a class="el" href="classfirestarr_1_1data_1_1Index.php">Index</a>&lt; T &gt; rhs) noexcept</td></tr>
<tr class="memdesc:a8f75b03fea6c12241644ae95ffd58a50"><td class="mdescLeft">&#160;</td><td class="mdescRight">Addition assignment operator.  <a href="classfirestarr_1_1data_1_1Index.php#a8f75b03fea6c12241644ae95ffd58a50">More...</a><br /></td></tr>
<tr class="separator:a8f75b03fea6c12241644ae95ffd58a50"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa8e7c8ca70b98cecea3fba613b69ce3f"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="classfirestarr_1_1data_1_1Index.php">Index</a>&lt; T &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfirestarr_1_1data_1_1Index.php#aa8e7c8ca70b98cecea3fba613b69ce3f">operator-=</a> (const <a class="el" href="classfirestarr_1_1data_1_1Index.php">Index</a>&lt; T &gt; rhs) noexcept</td></tr>
<tr class="memdesc:aa8e7c8ca70b98cecea3fba613b69ce3f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtraction assignment operator.  <a href="classfirestarr_1_1data_1_1Index.php#aa8e7c8ca70b98cecea3fba613b69ce3f">More...</a><br /></td></tr>
<tr class="separator:aa8e7c8ca70b98cecea3fba613b69ce3f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:a14a551eab599e322121654c2fa12dc10"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfirestarr_1_1data_1_1Index.php#a14a551eab599e322121654c2fa12dc10">value_</a></td></tr>
<tr class="memdesc:a14a551eab599e322121654c2fa12dc10"><td class="mdescLeft">&#160;</td><td class="mdescRight">Value represented by this.  <a href="classfirestarr_1_1data_1_1Index.php#a14a551eab599e322121654c2fa12dc10">More...</a><br /></td></tr>
<tr class="separator:a14a551eab599e322121654c2fa12dc10"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;class T&gt;<br />
class firestarr::data::Index&lt; T &gt;</h3>

<p>A wrapper around a double to ensure correct types are used. </p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">T</td><td>The derived class that this <a class="el" href="classfirestarr_1_1data_1_1Index.php" title="A wrapper around a double to ensure correct types are used.">Index</a> represents. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="Index_8h_source.php#l00024">24</a> of file <a class="el" href="Index_8h_source.php">Index.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="afeb43a857f2d399452e0bf4b029b9722"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afeb43a857f2d399452e0bf4b029b9722">&#9670;&nbsp;</a></span>~Index()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classfirestarr_1_1data_1_1Index.php">firestarr::data::Index</a>&lt; T &gt;::~<a class="el" href="classfirestarr_1_1data_1_1Index.php">Index</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destructor. </p>

</div>
</div>
<a id="a5119b473ce89bc2c41839937aa0d354c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5119b473ce89bc2c41839937aa0d354c">&#9670;&nbsp;</a></span>Index() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="classfirestarr_1_1data_1_1Index.php">firestarr::data::Index</a>&lt; T &gt;::<a class="el" href="classfirestarr_1_1data_1_1Index.php">Index</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Construct with a value of 0. </p>

<p class="definition">Definition at line <a class="el" href="Index_8h_source.php#l00038">38</a> of file <a class="el" href="Index_8h_source.php">Index.h</a>.</p>

</div>
</div>
<a id="adc29199a1479ba091f9e254904d51593"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adc29199a1479ba091f9e254904d51593">&#9670;&nbsp;</a></span>Index() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="classfirestarr_1_1data_1_1Index.php">firestarr::data::Index</a>&lt; T &gt;::<a class="el" href="classfirestarr_1_1data_1_1Index.php">Index</a> </td>
          <td>(</td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Construct with given value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>Value to assign </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="Index_8h_source.php#l00046">46</a> of file <a class="el" href="Index_8h_source.php">Index.h</a>.</p>

</div>
</div>
<a id="a3b387c890d1ebacda189cc382a067a29"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3b387c890d1ebacda189cc382a067a29">&#9670;&nbsp;</a></span>Index() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="classfirestarr_1_1data_1_1Index.php">firestarr::data::Index</a>&lt; T &gt;::<a class="el" href="classfirestarr_1_1data_1_1Index.php">Index</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classfirestarr_1_1data_1_1Index.php">Index</a>&lt; T &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">constexpr</span><span class="mlabel">default</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Move constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">rhs</td><td><a class="el" href="classfirestarr_1_1data_1_1Index.php" title="A wrapper around a double to ensure correct types are used.">Index</a> to move from </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a4206ad6943c1054bc931d04b55b4d011"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4206ad6943c1054bc931d04b55b4d011">&#9670;&nbsp;</a></span>Index() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="classfirestarr_1_1data_1_1Index.php">firestarr::data::Index</a>&lt; T &gt;::<a class="el" href="classfirestarr_1_1data_1_1Index.php">Index</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classfirestarr_1_1data_1_1Index.php">Index</a>&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">constexpr</span><span class="mlabel">default</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Copy constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">rhs</td><td><a class="el" href="classfirestarr_1_1data_1_1Index.php" title="A wrapper around a double to ensure correct types are used.">Index</a> to copy from </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a5df875f5afca6423b3cba29287a4911d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5df875f5afca6423b3cba29287a4911d">&#9670;&nbsp;</a></span>asDouble()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr double <a class="el" href="classfirestarr_1_1data_1_1Index.php">firestarr::data::Index</a>&lt; T &gt;::asDouble </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns value as a double. </p>
<dl class="section return"><dt>Returns</dt><dd>double value for <a class="el" href="classfirestarr_1_1data_1_1Index.php" title="A wrapper around a double to ensure correct types are used.">Index</a> </dd></dl>

<p class="definition">Definition at line <a class="el" href="Index_8h_source.php#l00094">94</a> of file <a class="el" href="Index_8h_source.php">Index.h</a>.</p>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><img src="classfirestarr_1_1data_1_1Index_a5df875f5afca6423b3cba29287a4911d_icgraph.png" border="0" usemap="#aclassfirestarr_1_1data_1_1Index_a5df875f5afca6423b3cba29287a4911d_icgraph" alt=""/></div>
<map name="aclassfirestarr_1_1data_1_1Index_a5df875f5afca6423b3cba29287a4911d_icgraph" id="aclassfirestarr_1_1data_1_1Index_a5df875f5afca6423b3cba29287a4911d_icgraph">
<area shape="rect" title="Returns value as a double." alt="" coords="968,93,1101,135"/>
<area shape="rect" href="classfirestarr_1_1wx_1_1Direction.php#a142a69baa6cdf546a168f8066fa13a69" title="Direction as degrees, where 0 is North and values increase clockwise." alt="" coords="773,5,917,47"/>
<area shape="rect" href="classfirestarr_1_1sim_1_1SpreadInfo.php#abd6a5409ebab16e177bd76aca9ee2f94" title="Calculate fire spread for time and place." alt="" coords="5,35,167,76"/>
<area shape="rect" href="classfirestarr_1_1fuel_1_1StandardFuel.php#ad6726c63b5e731cff9c4eb11bcc94e3b" title="BUI Effect on surface fire rate of spread [ST&#45;X&#45;3 eq 54]." alt="" coords="769,123,920,164"/>
<area shape="rect" href="namespacefirestarr_1_1wx.php#ad74ffb0b11d7b43a88de767bd8a69f9e" title=" " alt="" coords="771,189,919,215"/>
<area shape="rect" href="classfirestarr_1_1wx_1_1Direction.php#abaf38a8ed02d6b6e5c6ecb84b9b1091c" title="Direction as radians, where 0 is North and values increase clockwise." alt="" coords="577,5,721,47"/>
<area shape="rect" href="classfirestarr_1_1wx_1_1Direction.php#a6845016de2466a346e27d580c09d8840" title="Heading (opposite of this direction)" alt="" coords="385,5,529,47"/>
<area shape="rect" href="classfirestarr_1_1wx_1_1Wind.php#a6c273f6341d57a4ac61ba579917319dc" title="Direction wind is going towards." alt="" coords="215,5,337,47"/>
</map>
</div>

</div>
</div>
<a id="a9d2973a6d414267b15820bd6f221d186"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9d2973a6d414267b15820bd6f221d186">&#9670;&nbsp;</a></span>operator!=()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr bool <a class="el" href="classfirestarr_1_1data_1_1Index.php">firestarr::data::Index</a>&lt; T &gt;::operator!= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classfirestarr_1_1data_1_1Index.php">Index</a>&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Not equals operator. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">rhs</td><td><a class="el" href="classfirestarr_1_1data_1_1Index.php" title="A wrapper around a double to ensure correct types are used.">Index</a> to compare to </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Whether or not these are not equivalent </dd></dl>

<p class="definition">Definition at line <a class="el" href="Index_8h_source.php#l00086">86</a> of file <a class="el" href="Index_8h_source.php">Index.h</a>.</p>

</div>
</div>
<a id="af3876eaec550c3d7ace605f975b7b59b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af3876eaec550c3d7ace605f975b7b59b">&#9670;&nbsp;</a></span>operator+()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="classfirestarr_1_1data_1_1Index.php">Index</a>&lt;T&gt; <a class="el" href="classfirestarr_1_1data_1_1Index.php">firestarr::data::Index</a>&lt; T &gt;::operator+ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classfirestarr_1_1data_1_1Index.php">Index</a>&lt; T &gt;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Addition operator. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">rhs</td><td><a class="el" href="classfirestarr_1_1data_1_1Index.php" title="A wrapper around a double to ensure correct types are used.">Index</a> to add value from </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The value of this plus the value of the provided index </dd></dl>

<p class="definition">Definition at line <a class="el" href="Index_8h_source.php#l00139">139</a> of file <a class="el" href="Index_8h_source.php">Index.h</a>.</p>

</div>
</div>
<a id="a8f75b03fea6c12241644ae95ffd58a50"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8f75b03fea6c12241644ae95ffd58a50">&#9670;&nbsp;</a></span>operator+=()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="classfirestarr_1_1data_1_1Index.php">Index</a>&lt;T&gt;&amp; <a class="el" href="classfirestarr_1_1data_1_1Index.php">firestarr::data::Index</a>&lt; T &gt;::operator+= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classfirestarr_1_1data_1_1Index.php">Index</a>&lt; T &gt;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Addition assignment operator. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">rhs</td><td><a class="el" href="classfirestarr_1_1data_1_1Index.php" title="A wrapper around a double to ensure correct types are used.">Index</a> to add value from </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>This, plus the value of the provided <a class="el" href="classfirestarr_1_1data_1_1Index.php" title="A wrapper around a double to ensure correct types are used.">Index</a> </dd></dl>

<p class="definition">Definition at line <a class="el" href="Index_8h_source.php#l00157">157</a> of file <a class="el" href="Index_8h_source.php">Index.h</a>.</p>

</div>
</div>
<a id="a54806a488e87b0ab602efb2f0b25a96f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a54806a488e87b0ab602efb2f0b25a96f">&#9670;&nbsp;</a></span>operator-()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="classfirestarr_1_1data_1_1Index.php">Index</a>&lt;T&gt; <a class="el" href="classfirestarr_1_1data_1_1Index.php">firestarr::data::Index</a>&lt; T &gt;::operator- </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classfirestarr_1_1data_1_1Index.php">Index</a>&lt; T &gt;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Subtraction operator. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">rhs</td><td><a class="el" href="classfirestarr_1_1data_1_1Index.php" title="A wrapper around a double to ensure correct types are used.">Index</a> to add value from </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The value of this minus the value of the provided index </dd></dl>

<p class="definition">Definition at line <a class="el" href="Index_8h_source.php#l00148">148</a> of file <a class="el" href="Index_8h_source.php">Index.h</a>.</p>

</div>
</div>
<a id="aa8e7c8ca70b98cecea3fba613b69ce3f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa8e7c8ca70b98cecea3fba613b69ce3f">&#9670;&nbsp;</a></span>operator-=()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="classfirestarr_1_1data_1_1Index.php">Index</a>&lt;T&gt;&amp; <a class="el" href="classfirestarr_1_1data_1_1Index.php">firestarr::data::Index</a>&lt; T &gt;::operator-= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classfirestarr_1_1data_1_1Index.php">Index</a>&lt; T &gt;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Subtraction assignment operator. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">rhs</td><td><a class="el" href="classfirestarr_1_1data_1_1Index.php" title="A wrapper around a double to ensure correct types are used.">Index</a> to add value from </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>This, minus the value of the provided <a class="el" href="classfirestarr_1_1data_1_1Index.php" title="A wrapper around a double to ensure correct types are used.">Index</a> </dd></dl>

<p class="definition">Definition at line <a class="el" href="Index_8h_source.php#l00167">167</a> of file <a class="el" href="Index_8h_source.php">Index.h</a>.</p>

</div>
</div>
<a id="aab5f801d345695bc05bfaf23de9bfecb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aab5f801d345695bc05bfaf23de9bfecb">&#9670;&nbsp;</a></span>operator&lt;()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr bool <a class="el" href="classfirestarr_1_1data_1_1Index.php">firestarr::data::Index</a>&lt; T &gt;::operator&lt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classfirestarr_1_1data_1_1Index.php">Index</a>&lt; T &gt;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Less than operator. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">rhs</td><td><a class="el" href="classfirestarr_1_1data_1_1Index.php" title="A wrapper around a double to ensure correct types are used.">Index</a> to compare to </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Whether or not this is less than the provided <a class="el" href="classfirestarr_1_1data_1_1Index.php" title="A wrapper around a double to ensure correct types are used.">Index</a> </dd></dl>

<p class="definition">Definition at line <a class="el" href="Index_8h_source.php#l00103">103</a> of file <a class="el" href="Index_8h_source.php">Index.h</a>.</p>

</div>
</div>
<a id="a0416eae4a5a48a4f38ed2677c46dae62"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0416eae4a5a48a4f38ed2677c46dae62">&#9670;&nbsp;</a></span>operator&lt;=()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr bool <a class="el" href="classfirestarr_1_1data_1_1Index.php">firestarr::data::Index</a>&lt; T &gt;::operator&lt;= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classfirestarr_1_1data_1_1Index.php">Index</a>&lt; T &gt;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Less than or equal to operator. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">rhs</td><td><a class="el" href="classfirestarr_1_1data_1_1Index.php" title="A wrapper around a double to ensure correct types are used.">Index</a> to compare to </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Whether or not this is less than or equal to the provided <a class="el" href="classfirestarr_1_1data_1_1Index.php" title="A wrapper around a double to ensure correct types are used.">Index</a> </dd></dl>

<p class="definition">Definition at line <a class="el" href="Index_8h_source.php#l00121">121</a> of file <a class="el" href="Index_8h_source.php">Index.h</a>.</p>

</div>
</div>
<a id="a18a991bffff923f3bf8ecf6042dcd2e4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a18a991bffff923f3bf8ecf6042dcd2e4">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classfirestarr_1_1data_1_1Index.php">Index</a>&lt;T&gt;&amp; <a class="el" href="classfirestarr_1_1data_1_1Index.php">firestarr::data::Index</a>&lt; T &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classfirestarr_1_1data_1_1Index.php">Index</a>&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Copy assignment. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">rhs</td><td><a class="el" href="classfirestarr_1_1data_1_1Index.php" title="A wrapper around a double to ensure correct types are used.">Index</a> to copy from </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>This, after assignment </dd></dl>

</div>
</div>
<a id="a2e9b375adfa0e988aba0bc12a0d1dbb2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2e9b375adfa0e988aba0bc12a0d1dbb2">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classfirestarr_1_1data_1_1Index.php">Index</a>&lt;T&gt;&amp; <a class="el" href="classfirestarr_1_1data_1_1Index.php">firestarr::data::Index</a>&lt; T &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classfirestarr_1_1data_1_1Index.php">Index</a>&lt; T &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Move assignment. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">rhs</td><td><a class="el" href="classfirestarr_1_1data_1_1Index.php" title="A wrapper around a double to ensure correct types are used.">Index</a> to move from </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>This, after assignment </dd></dl>

</div>
</div>
<a id="a355a1deb00a43102ca17a49fcc2afd59"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a355a1deb00a43102ca17a49fcc2afd59">&#9670;&nbsp;</a></span>operator==()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr bool <a class="el" href="classfirestarr_1_1data_1_1Index.php">firestarr::data::Index</a>&lt; T &gt;::operator== </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classfirestarr_1_1data_1_1Index.php">Index</a>&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Equality operator. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">rhs</td><td><a class="el" href="classfirestarr_1_1data_1_1Index.php" title="A wrapper around a double to ensure correct types are used.">Index</a> to compare to </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Whether or not these are equivalent </dd></dl>

<p class="definition">Definition at line <a class="el" href="Index_8h_source.php#l00077">77</a> of file <a class="el" href="Index_8h_source.php">Index.h</a>.</p>

</div>
</div>
<a id="ac7174a9e268a24bb04612d2f5b62379a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac7174a9e268a24bb04612d2f5b62379a">&#9670;&nbsp;</a></span>operator&gt;()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr bool <a class="el" href="classfirestarr_1_1data_1_1Index.php">firestarr::data::Index</a>&lt; T &gt;::operator&gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classfirestarr_1_1data_1_1Index.php">Index</a>&lt; T &gt;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Greater than operator. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">rhs</td><td><a class="el" href="classfirestarr_1_1data_1_1Index.php" title="A wrapper around a double to ensure correct types are used.">Index</a> to compare to </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Whether or not this is greater than the provided <a class="el" href="classfirestarr_1_1data_1_1Index.php" title="A wrapper around a double to ensure correct types are used.">Index</a> </dd></dl>

<p class="definition">Definition at line <a class="el" href="Index_8h_source.php#l00112">112</a> of file <a class="el" href="Index_8h_source.php">Index.h</a>.</p>

</div>
</div>
<a id="af9b9d22420d89b8b489d7d3a665f79cf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af9b9d22420d89b8b489d7d3a665f79cf">&#9670;&nbsp;</a></span>operator&gt;=()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr bool <a class="el" href="classfirestarr_1_1data_1_1Index.php">firestarr::data::Index</a>&lt; T &gt;::operator&gt;= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classfirestarr_1_1data_1_1Index.php">Index</a>&lt; T &gt;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Greater than or equal to operator. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">rhs</td><td><a class="el" href="classfirestarr_1_1data_1_1Index.php" title="A wrapper around a double to ensure correct types are used.">Index</a> to compare to </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Whether or not this is greater than or equal to the provided <a class="el" href="classfirestarr_1_1data_1_1Index.php" title="A wrapper around a double to ensure correct types are used.">Index</a> </dd></dl>

<p class="definition">Definition at line <a class="el" href="Index_8h_source.php#l00130">130</a> of file <a class="el" href="Index_8h_source.php">Index.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a14a551eab599e322121654c2fa12dc10"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a14a551eab599e322121654c2fa12dc10">&#9670;&nbsp;</a></span>value_</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double <a class="el" href="classfirestarr_1_1data_1_1Index.php">firestarr::data::Index</a>&lt; T &gt;::value_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Value represented by this. </p>

<p class="definition">Definition at line <a class="el" href="Index_8h_source.php#l00029">29</a> of file <a class="el" href="Index_8h_source.php">Index.h</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>FireSTARR/src/<a class="el" href="Index_8h_source.php">Index.h</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>
</html>
