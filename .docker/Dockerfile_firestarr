# syntax=docker/dockerfile:1
FROM gcc:10.3
WORKDIR /FireGUARD/
COPY .docker/requirements_firestarr.txt requirements_firestarr.txt
WORKDIR /FireGUARD/FireSTARR/
RUN (apt-get update || echo Ignoring update errors) \
  && apt-get install -y software-properties-common \
  && echo Adding ppa \
  && (add-apt-repository ppa:ubuntugis/ubuntugis-unstable || echo Ignoring add error) \
  && echo Added ppa \
  && (apt-get update || echo Ignoring update errors) \
  && echo Updated \
  && apt-get install -y gcc make git curl zip unzip tar \
    libtiff-dev libgeotiff-dev g++ cmake sqlite3 libsqlite3-dev libpq-dev \
    unixodbc-dev odbc-postgresql python3-pip \
    libgdal-dev util-linux cron rsync openssh-server \
  && apt-get install -y gdal-bin libgdal-dev gdb \
  && apt-get clean && rm -rf /var/lib/apt/lists/* \
  && rm -rf \
      /usr/share/man/* \
      /usr/includes/* \
      /var/cache/apk/* \
      /root/.npm/* \
      /usr/lib/node_modules/npm/man/* \
      /usr/lib/node_modules/npm/doc/* \
      /usr/lib/node_modules/npm/html/* \
      /usr/lib/node_modules/npm/scripts/* \
  && update-alternatives --install /usr/bin/python python /usr/bin/python3 10 \
  && python -m pip install pip==21.0.1 \
  && export CPLUS_INCLUDE_PATH=/usr/include/gdal \
  && export C_INCLUDE_PATH=/usr/include/gdal \
  && python -m pip install -r /FireGUARD/requirements_firestarr.txt \
  && ogrinfo --version | sed "s/GDAL \(.*\),.*/\1/"\
  && python -m pip install gdal==`ogrinfo --version | sed "s/GDAL \(.*\),.*/\1/"`
RUN (useradd -m user || echo User already exists) && (yes password | passwd user)
RUN echo "*/5 * * * * root /usr/bin/flock -n /tmp/update.lockfile /FireGUARD/FireSTARR/update.sh > /proc/1/fd/1 2>/proc/1/fd/2" >> /etc/crontab
ENTRYPOINT service ssh start && cron -f
